// nodeBackbone.js

// This javascript file, along with the other documents that make up this website and database, were generated by David Kaff and Amelia Walsh in CS 340 at Oregon State in the Winter of 2021.

// The following resources were referenced in the creation of this database driven website:

    // expressjs.com
    // CS 290 Coursework
    // CS 340 Coursework
    // bootstrap.com
    // stackoverflow.com
    // eloquentjavascript.net
    // udemy.com
    //amelia is awesome!

         ///////////////////////////////////////////////////////////////
        // in order for this website to run, node must be installed, //
       //     along with the following packages:                    //
      //        express, express-handlebars, express-session,      //
     //         body-parser, and mysql                            //
    ///////////////////////////////////////////////////////////////

//================================================================//

      ///////////////////////////////////////////
     // set up express and other dependencies //
    ///////////////////////////////////////////

const express = require('express');
const app = express();

const handlebars = require('express-handlebars').create({defaultLayout:'main'});

app.engine('handlebars', handlebars.engine);
app.set('view engine', 'handlebars');
app.use('/source', express.static('resources'));

const bodyParser = require('body-parser');
app.use(bodyParser.urlencoded({extended: false}));
app.use(bodyParser.json());

// magic from Millie
const CORS = require('cors');
app.use(CORS());


// const session = require('express-session');
// app.use(session({secret: 'verySecretPassword'}));

const mysql = require('mysql');
const pool = mysql.createPool({
    connectionLimit:    10,
    host:               'classmysql.engr.oregonstate.edu',
    user:               'cs340_kaffs',
    password:           'sP6ptfbWuXAU54w',
    database:           'cs340_kaffs'
});
module.exports.pool = pool;

//================================================================//

      //~~~//////////////////////////////////~~~//
     //    express backbone for node server    //
    //~~~//////////////////////////////////~~~//

const port = 28394;
app.set('port', port);

    /////////////
   // content //
  /////////////

app.get('/', funcHome);

//routes for farmer and planting pages
app.get('/farmer', funcFarmer);
app.get('/farmer-plant-new-row', func_farmer_new_crop_rows);
app.get('/farmer-harvestNewRow', funcFarmerNewHarvest);
app.get('/farmer-view-planted-rows', func_farmer_view_rows);
app.get('/farmer-viewProduceOnHand', funcFarmerViewProduce);
app.get('/farmer-addNewCropType', funcAddNewCropType)

//routes for box packer
app.get('/box-packer', funcBoxPacker);

//routes for admin page and sub-pages
app.get('/admin', funcAdmin);
app.get('/admin-add-cust',func_add_cust);
app.get('/admin-updt-cust',func_updt_cust);
app.get('/admin-boxes-view',func_boxes_view);

function funcHome(req, res){
    content = {title: 'Rubyfruit Farm'};
    res.render('home', content);
}

          //////////////////
//=======// farmer pages //================================//
        //////////////////

function funcFarmer(req, res){
    content = {title: 'Rubyfruit Farm – Farmer'};
    res.render('farmer', content);
}

function func_farmer_new_crop_rows(req, res){
    content = {title: 'Rubyfruit Farm – Enter Row Planted'};
    // get the crop type names before rendering
    pool.query(
        get_crop_types_query,
        function(err, result){
            // on return:
                // push results into content
                // render farmer-plant-new-row
            content.crop_types = result;
            res.render('farmer-plant-new-row', content);
        }
    )
}

function funcFarmerNewHarvest(req, res){
    content = {title: 'Rubyfruit Farm – Enter Row Harvested'};
    res.render('farmer-harvestNewRow', content);
}

function func_farmer_view_rows(req, res){
    content = {title: 'Rubyfruit Farm – View Rows'};
    // get the crop type names before rendering
    pool.query(
        get_crop_rows_query,
        function(err, result){
            // on return:
                // push results into content
                // render farmer-view-planted-rows
            content.crop_rows = result;
            for (r in content.crop_rows) {
                console.log(content.crop_rows[r]);
            }
            for (i in content.crop_rows) {
                content.crop_rows[i].mature_date = new Date(content.crop_rows[i].mature_date).toDateString()
            }
            res.render('farmer-view-planted-rows', content);
        }
    )
}

function funcFarmerViewProduce(req, res){
    content = {title: 'Rubyfruit Farm – View Produce'};
    res.render('farmer-viewProduceOnHand', content);
}

function funcAddNewCropType(req, res){
    content = {title: 'Rubyfruit Farm – Add Crop Type'};
    res.render('farmer-addNewCropType', content);
}

          /////////////////////
//=======// box packer page //================================//
        /////////////////////

function funcBoxPacker(req, res){
    content = {title: 'Rubyfruit Farm – Box Packer'};
    res.render('boxPacker', content);
}

// Amelia's Pages: include pages that manage box packer & Admin

// ***ADMIN PAGES***

function funcAdmin(req, res){
  content = {title: 'Rubyfruit Farm – Administrator'};
  res.render('admin', content);
}

function func_add_cust(req, res){
  content = {title: 'Rubyfruit Farm - Customer'};
  res.render('admin_add_cust', content);
}

function func_updt_cust(req, res){
  content = {title: 'Rubyfruit Farm - Customer'};
  res.render('admin_update_cust', content);
}

function func_boxes_view(req, res){
  content = {title: 'Rubyfruit Farm - Boxes'};
  res.render('adminBoxView', content);
}



          /////////////////
//=======// SQL Queries //================================//
        /////////////////

const get_crop_types_query = 'SELECT crop_name, crop_id FROM Crop_Types;';
const add_crop_row_query = "INSERT INTO Crop_Rows (`crop_id`, `mature_date`) VALUES (?, ?);";
const get_crop_rows_query = 'SELECT row_id, Crop_Rows.crop_id, mature_date, crop_name FROM Crop_Rows LEFT JOIN Crop_Types ON Crop_Rows.crop_id = Crop_Types.crop_id;';



          /////////////////////////////
//=======// Database AJAX Functions //================================//
        /////////////////////////////
app.post('/INSERT-crop-rows', func_INSERT_crop_rows);
function func_INSERT_crop_rows(req, res, next) {
    // on return, send good response back
    var {crop_id, mature_date} = req.body;
    console.log('crop_id = ');
    res.type('text/plain');
    res.status(200);
    res.send('200 - good INSERT');

    // var {crop_id, mature_date} = req.body;
    // pool.query(
    //     add_crop_row_query,
    //     [crop_id, mature_date],
    //     function(err, result){
    //         if(err){
    //             res.type('text/plain');
    //             res.status(401);
    //             res.send('401 - bad INSERT');
    //           console.log(err);
    //           return;
    //         }
    //         // on return, send good response back
    //         res.type('text/plain');
    //         res.status(200);
    //         res.send('200 - good INSERT');
    //     }
    // )
}


    ////////////
   // errors //
  ////////////

app.use(function(req,res){
  res.type('text/plain');
  res.status(404);
  res.send('404 - Not Found');
});

app.use(function(err, req, res, next){
  console.error(err.stack);
  res.type('plain/text');
  res.status(500);
  res.send('500 - Server Error');
});

//======================================================================//

      //////////////////////////////////////////////////////////////
     // Start listening to port, readout to log what's going on. //
    //////////////////////////////////////////////////////////////

app.listen(app.get('port'), function(){
  console.log('Express started on http://localhost:' + app.get('port') + '; press CMD-. to terminate.')
});

// check one two

// extra comment